<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 회원정보 처리 SQL -->
<mapper namespace="com.jin.wedP.board.DAO.boardMapper">
	
	<!-- 글쓰기  -->
	
	<insert id="write" parameterType="board">
		insert into board1
		(
		boardnum
		,id
		,title
		,content
		,inputdate
		<if test="originalfile != null and savedfile != null">
		,originalfile
		,savedfile
		</if>
		)
		values
		(
		board1_seq.nextval
		, #{id}
		, #{title}
		, #{content}
		, sysdate
		<if test="originalfile != null and savedfile != null">
		,#{originalfile}
		,#{savedfile}
		</if>
		)
	</insert>
	<!-- 현재 페이지 목록 (검색 필터링 후) -->
	<!-- 게시글 다 가져오기 -->
	<select id="selectBoardAll" parameterType="hashMap" resultType="board" >
	select
		boardnum
		,id
		,title
		,content
		,to_char(inputdate, 'yyyy-MM-dd HH24:MI:SS')inputdate
		,hits
	from
		board1
	<!-- 전달받은 하나의 파라미터 사용시 -->
	<if test="searchText != null">
	where
	${searchSelect} like '%' || #{searchText} || '%'
	</if>
	order by
		boardnum desc		
	</select>
	<!-- 게시글 읽기 -->
	<select id="readList" parameterType="int" resultType="Board">
		select 
			boardnum
			, id
			, title
			, content
			, to_char(inputdate, 'YYYY-MM-DD HH24:MI:SS') inputdate
			, hits
			, originalfile
			, savedfile
		from 
			board1 
		where 
			boardnum = #{boardnum}
	</select>
	
	
	
		<!-- 전체 글 개수 (검색 필터링 후) -->
	<select id="getTotal" parameterType="hashMap" resultType="int">
		select 
			count(*)
		from 
			board1 
		<if test="searchText != null">
		where
		${searchSelect} like '%' || #{searchText} || '%'
		</if>
	</select>
	
	<!-- 조회수 1 증가 -->
	<update id="addHits" parameterType="int">
		update
			board1
		set
			hits = hits + 1
		where
			boardnum = #{boardnum}
	</update>
	<!-- 글 삭제 -->
	<delete id="deleteBoard" parameterType="board">
		delete
		from
			board1
		where
			boardnum = #{boardnum}
			and id = #{id}
	</delete>
	<!-- 글 수정 -->
	<update id="updateBoard" parameterType="board">
		update
			board1
		set
			title = #{title}
			, content = #{content}
			<if test="originalfile != null and savedfile != null">
			, originalfile = #{originalfile}
			, savedfile = #{savedfile}
			</if>
		where
			boardnum = #{boardnum}
			and id = #{id}
	</update>
	<!-- 리플 저장 -->
	<insert id="insertReply" parameterType="Reply">
		insert into reply1 (
			replynum
			, boardnum
			, id
			, text
		)
		values (
			reply1_seq.nextval
			, #{boardnum}
			, #{id}
			, #{text}
		)
	</insert>
	<!-- 현재 글의 리플 목록 -->
	<select id="listReply" parameterType="int" resultType="Reply">
		select 
			replynum
			, boardnum
			, id
			, text
			, to_char(inputdate, 'YYYY-MM-DD HH24:MI:SS') inputdate
		from 
			reply1 
		where
			boardnum = #{boardnum}
		order by replynum desc
	</select>
	
	<!-- 리플 삭제 -->
	<delete id="deleteReply" parameterType="Reply">
		delete
		from
			reply1
		where
			replynum = #{replynum}
			and id = #{id}
	</delete>
	<!-- 리플 수정 -->
	<update id="updateReply" parameterType="Reply">
		update
			reply1
		set
			text = #{text}
		where
			replynum = #{replynum}
			and id = #{id}
	</update>
</mapper>
